#!/usr/bin/perl
use strict;
use warnings;

sub flashAndRootStrap($$$);
sub attemptSSH();
sub run(@);
sub tryrun(@);

sub main(@){
  die "Usage: $0 FIRMWARE EMMC KERNEL\n" if @_ != 3;
  my ($fw, $emmc, $kernel) = @_;

  flashAndRootStrap $fw, $emmc, $kernel;
  attemptSSH();
}

sub flashAndRootStrap($$$){
  my ($fw, $emmc, $kernel) = @_;

  $fw = readlink $fw if -l $fw;
  $emmc = readlink $emmc if -l $emmc;
  $kernel = readlink $kernel if -l $kernel;

  my $version = "\\d\\d.\\d\\d\\d\\d.\\d\\d-\\d";
  my $fwRegex = "DFL61_HARMATTAN_${version}_PR_LEGACY_00\\d-OEM1-958_ARM.bin";
  my $emmcRegex = "DFL61_HARMATTAN_${version}.[A-Z]+_EMMC_[A-Z]+.bin";
  my $kernelRegex = "zImage";
  die "weird firmware: $fw\n" if not -f $fw or $fw !~ /$fwRegex/;
  die "weird emmc: $emmc\n" if not -f $emmc or $emmc !~ /$emmcRegex/;
  die "weird kernel: $kernel\n" if not -f $kernel or $kernel !~ /$kernelRegex/;

  print "\n\n\nflashing firmware and emmc\n";
  run "sudo", "flasher", "-f", "-F", $fw, "-F", $emmc;

  print "\n\n\nflashing ubiboot and starting ubiboot maintenance console\n";
  run "./ubi-console", "--flash";

  print "\n\n\nmounting partitions and copying files for rootstrapping\n";
  tryrun "./ubi-mnt", "-u";
  tryrun "./ubi-mnt", "-u";
  run "./ubi-mnt", "-m";
  run "./ubi-rootstrap";
  run "./ubi-sshkeys";
  run "./ubi-mnt", "-u";

  print "\n\n\nrebooting and flashing kernel in the background\n";
  run "sudo flasher -f -F $fw -k $kernel --flash-only=kernel -R &";
  run "./ubi-cmd", "reboot2";
}

sub attemptSSH(){
  print "\n\n\nwaiting for kernel flash, rebooting, and attempting to ssh\n";
  run "loop -s sudo ifconfig usb0 192.168.2.14";
  my $out = `ssh user\@192.168.2.15 echo YAY`;
  die "couldnt ssh\n" unless $out =~ /YAY/;
  print "\n\n\nSUCCESSFUL SSH\n";
}

sub run(@){
  tryrun @_;
  die "@_ failed\n" if $? != 0;
}
sub tryrun(@){
  print "@_\n";
  system @_;
}

&main(@ARGV);
