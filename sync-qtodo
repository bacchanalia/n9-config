#!/usr/bin/perl
use strict;
use warnings;

my $todoFile = "$ENV{HOME}/TODO";
my $remoteDir = "/home/user/to-do-o";
my $remoteFile = "$remoteDir/default.xml";

sub getTodos();

my $usage = "Usage:
  $0
    copy new qtodos into TODO, then generate qtodo from TODO
  $0 --del
    generate qtodo from TODO, overwriting qtodos
";

sub main(@){
  my $del = shift if @_ == 1 and $_[0] eq '--del';
  die $usage if @_ > 0;

  my @todos = getTodos;
  if(not defined $del){
    print "Adding qtodos to $todoFile\n";
    system "todo-parse", "--add", @todos;
    print "\n\n";
  }
  print "Replacing qtodo xml {backed up} from ${todoFile}'s git history\n";
  my $xml = `todo-parse --qtodo`;
  my $tmpFile = "/tmp/qtodo_" . time();
  open FH, "> $tmpFile" or die "Couldnt write $tmpFile\n";
  print FH $xml;
  close FH;
  my $host = `n9`;
  chomp $host;
  system "scp", $tmpFile, "user\@$host:$remoteFile";
}

sub getTodos(){
  my $xml = `n9 -s cat $remoteDir/default.xml`;
  my $now = time();
  system "n9", "-s", "
    mkdir -p $remoteDir
    chown user.users $remoteDir
    file=\"$remoteFile\"
    bak=\"${remoteFile}_bak_$now\"
    mv \$file \$bak
  ";
  my @todos;
  while($xml =~ /<to-do\ (done="true")?  [^>]* >  ([^<]*) /gmx){
    push @todos, $2;
  }
  for my $todo(@todos){
    $todo = lc $todo;
    $todo =~ s/\&lt;/</g;
    $todo =~ s/\&amp;/\&/g;
    $todo =~ s/^\s*//;
    $todo =~ s/\s*$//;
  }
  return @todos;
}

&main(@ARGV);
